/*
In this lesson,
you will learn how to validate the keys that you have designated to specific column(s) in a database table.
There are several ways to do so, however,
we will focus on utilizing the information schema database that comes with PostgreSQL.

INFORMATION SCHEMA

As part of an international SQL standard,
the information schema is a database cotaining meta information about objects in the database including:
tables, columns, and constraints.
This schema provides users with read-only view of many topics of interest.

For example, 
to determine if a column has been disgnated correctly as a primary key,
we can query a special view, [key_column_usage], generated from this database.
This view identifies all columns in the current database that are restricted by some constraint
such as primary or foreign key.

Suppose you would like to find out the constraints that have been placed on certain columns in a table, 
such as a [recipe], you would have to type the following query:

SELECT constraint_name, table_name, column_name
FROM information_schema.key_column_usage
WHERE table_name = 'recipe';

This should display the following output:

 constraint_name | table_name | column_name 
-----------------+------------+-------------
 recipe_pkey     | recipe     | id
(1 row)


The [constraint_name] value, such as [recipe_pkey], 
is generated by default to begin with a table name followed by the type of constraint.

[pkey] refers to a primary key constraint
while [fkey] refers to a foreign key constraint

Instructions
Checkpoint 1 Passed
1.
We have recreated the book, chapter and author tables with their corresponding primary keys that you previously defined in the last exercise.

In script.sql, write a query using the information_schema.key_column_usage view to validate the existence of a primary key in the book table.

What is the name of the column that is the primary key?

Query the information_schema.key_column_usage view as follows, replacing the blank with the table name you are interested in.

SELECT
  constraint_name, table_name, column_name
FROM
  information_schema.key_column_usage
WHERE
  table_name = '___';

Copy to Clipboard

Checkpoint 2 Passed
2.
In script.sql, query the information_schema.key_column_usage view to validate the existence of a primary key in the chapter table.

What is the name of the column that has the primary key?

Checkpoint 3 Passed
3.
In script.sql, query the information_schema.key_column_usage view to validate the existence of a primary key in the author table.

What is the name of the column that has the primary key?

SELECT constraint_name, table_name, column_name
FROM information_schema.key_column_usage
WHERE table_name = 'book';

SELECT constraint_name, table_name, column_name
FROM information_schema.key_column_usage
WHERE table_name = 'chapter';

SELECT constraint_name, table_name, column_name
FROM information_schema.key_column_usage
WHERE table_name = 'author';

Query Results
constraint_name	table_name	column_name
book_pkey	book	isbn
constraint_name	table_name	column_name
chapter_pkey	chapter	id
constraint_name	table_name	column_name
author_pkey	author	email
Database Schema
book
name	type
title	character varying
isbn	character varying
pages	integer
price	money
description	character varying
publisher	character varying
Rows: 0
chapter
name	type
id	integer
number	integer
title	character varying
content	character varying
Rows: 0
author
name	type
name	character varying
bio	character varying
email	character varying
Rows: 0


*/