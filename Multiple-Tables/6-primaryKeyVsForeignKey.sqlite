/*
Let's return to our example of the magazine subscriptions.
Recall that we had three tables: [orders], [subscriptions], and [customers].

Each of these tables has a column that uniquely identifies each row of that table:

[order_id] for [orders]
[subscription_id] for [subscriptions]
[customer_id] for [customers]

These special columns are called [PRIMARY KEYS]

Primary keys have a few requirements.

- NONE of the values can be NULL.
- Each value must be unique (You can't have two customers with the same customer_id in the customers table)
- A table cannot have more than one primary key column.

Let's reexamine the [orders] table:

order_id	    customer_id	    subscription_id	    purchase_date
1	            2	            3	                2017-01-01
2           	2           	2               	2017-01-01
3	            3	            1	                2017-01-01

Note that 
[customer_id] (the primary key for [customers])
and
[subscription_id] (the primary key for [subscriptions])
Both appear in this.

When the primary key for one table appears in a different table, it is called a foreign key.

So [customer_id] is a primary key when it appears in [customers], 
but a foreign key when it appears in [orders].

In this example, our primary keys all had somewhat descriptive names.
Generally, the primary key will just be called [id].
Foreign keys will have more descriptive names.

Why is this important?

The most common types of joins will be joining a foreign key rom one table with the primary key from anotther table.
For instance, 
when we join [orders] and [customers], 
we join on [customer_id] which is a foreign key in [orders] and the primary key in customers.


Instructions
Checkpoint 1 Passed
1.
Suppose Columbia University has two tables in their database:

The classes table contains information on the classes that the school offers. Its primary key is id.
The students table contains information on all students in the school. Its primary key is id. It contains the foreign key class_id, which corresponds to the primary key of classes.
Perform an inner join of classes and students using the primary and foreign keys described above, and select all the columns.

Your ON statement should include:

classes.id (a primary key)
students.class_id (a foreign key)
It should look like:

SELECT *
FROM classes
JOIN students
  ON classes.id = students.class_id;

Copy to Clipboard

You should already know how to do this join. But in this exercise, you learned that the matching column is usually a primary key of a table and foreign key of another!

SELECT * 
FROM classes
JOIN students
  ON classes.id = students.class_id;

Query Results
id	description	weeks	enrollment_cap	id	first_name	last_name	email	class_id
1	Intro to Javascript	10	30	11752	Arnita	Castera	AC2289@gsnail.com	1
1	Intro to Javascript	10	30	21361	Flor	Rittie	FlorRittie1@gsnail.com	1
1	Intro to Javascript	10	30	24749	Aura	Longin	Aura.Longin@gsnail.com	1
1	Intro to Javascript	10	30	35699	Kazuko	Buddemeyer	Kazuko.Buddemeyer@gsnail.com	1
1	Intro to Javascript	10	30	38832	Minda	Oberlander	MindaOberlander44@inlook.com	1
1	Intro to Javascript	10	30	45985	Emelia	Shum	EShum1988@gsnail.com	1
1	Intro to Javascript	10	30	48447	Edwin	Voigtlander	EdwinVoigtlander24@gsnail.com	1
1	Intro to Javascript	10	30	53042	Lidia	Ashfield	LidiaAshfield31@gsnail.com	1
1	Intro to Javascript	10	30	54061	Eric	Ximenez	EXimenez1990@inlook.com	1
1	Intro to Javascript	10	30	68193	Marci	Jenness	MJenness1999@gsnail.com	1
1	Intro to Javascript	10	30	70627	Jack	Haney	Jack.Haney@coldmail.com	1
1	Intro to Javascript	10	30	82898	Patrick	Barbella	PB9978@gsnail.com	1
1	Intro to Javascript	10	30	86095	Kelly	Dabadie	Kelly.Dabadie@inlook.com	1
2	Intro to Python	12	35	33442	Malika	Giannetti	Malika.Giannetti@gsnail.com	2
2	Intro to Python	12	35	47189	Cammy	Aden	CA4745@gsnail.com	2
2	Intro to Python	12	35	52156	Arcelia	Rendler	ArceliaRendler75@gsnail.com	2
2	Intro to Python	12	35	82591	Collen	Margis	CMargis1980@gsnail.com	2
2	Intro to Python	12	35	92215	Aurora	Flavors	AuroraFlavors39@gsnail.com	2
3	Intermediate SQL	8	32	10442	Fern	Buchbinder	FBuchbinder1982@gsnail.com	3
3	Intermediate SQL	8	32	17547	Angela	Kimber	Angela.Kimber@gsnail.com	3
3	Intermediate SQL	8	32	30226	Meghann	Mortland	MeghannMortland40@gsnail.com	3
3	Intermediate SQL	8	32	48361	Maricela	Haith	MHaith1990@gsnail.com	3
3	Intermediate SQL	8	32	51370	Penelope	Skemp	Penelope.Skemp@gsnail.com	3
3	Intermediate SQL	8	32	53818	Breana	Pree	Breana.Pree@coldmail.com	3
3	Intermediate SQL	8	32	74262	Berry	Bartelson	Berry.Bartelson@gsnail.com	3
3	Intermediate SQL	8	32	76849	Faustina	Marchello	FM9997@gsnail.com	3
3	Intermediate SQL	8	32	76884	Clare	Lauretta	CL9794@gsnail.com	3
3	Intermediate SQL	8	32	78983	Maura	Bynoe	MauraBynoe51@gsnail.com	3
3	Intermediate SQL	8	32	91373	Freddie	Cherwinski	Freddie.Cherwinski@gsnail.com	3
3	Intermediate SQL	8	32	95241	Gisele	Bethea	Gisele.Bethea@gsnail.com	3
4	D3-js for Beginners	6	35	12572	Maynard	Gunia	MG8854@gsnail.com	4
4	D3-js for Beginners	6	35	14847	Tangela	Sadorra	TSadorra1974@gsnail.com	4
4	D3-js for Beginners	6	35	19006	Cristi	Funderburk	CFunderburk1988@coldmail.com	4
4	D3-js for Beginners	6	35	22097	Loria	Bordon	LBordon1990@gsnail.com	4
4	D3-js for Beginners	6	35	25862	Larita	Wadden	LW6686@gsnail.com	4
4	D3-js for Beginners	6	35	26320	Lucille	Delongis	Lucille.Delongis@gsnail.com	4
4	D3-js for Beginners	6	35	42490	Tillie	Brinlee	TillieBrinlee10@gsnail.com	4
4	D3-js for Beginners	6	35	52074	Lanny	Doop	Lanny.Doop@gsnail.com	4
4	D3-js for Beginners	6	35	55867	Adrien	Siggins	ASiggins1999@gsnail.com	4
4	D3-js for Beginners	6	35	57470	Jefferey	Gribbins	JeffereyGribbins97@gsnail.com	4
4	D3-js for Beginners	6	35	60546	Dorthea	Breeding	DBreeding1990@gsnail.com	4
4	D3-js for Beginners	6	35	61559	Leigha	Mani	LM1846@gsnail.com	4
4	D3-js for Beginners	6	35	67047	Pearlie	Palomar	PP7361@gsnail.com	4
4	D3-js for Beginners	6	35	71067	Celinda	Lummis	CLummis1990@gsnail.com	4
4	D3-js for Beginners	6	35	86455	Delmer	Knightly	DKnightly1972@yoohoo.com	4
4	D3-js for Beginners	6	35	87158	Kala	Hathorne	KalaHathorne20@gsnail.com	4
4	D3-js for Beginners	6	35	88153	Cleo	Delaurie	CD5205@gsnail.com	4
4	D3-js for Beginners	6	35	91494	Ali	Roskop	AR5364@gsnail.com	4
4	D3-js for Beginners	6	35	96009	Kirstin	Kahre	KKahre1981@gsnail.com	4
4	D3-js for Beginners	6	35	99176	Heike	Granado	HGranado1971@gsnail.com	4
Database Schema
students
name	type
id	INT
first_name	VARCHAR(256)
last_name	VARCHAR(256)
email	VARCHAR(256)
class_id	INTEGER
Rows: 50
classes
name	type
id	INT
description	VARCHAR(256)
weeks	INT
enrollment_cap	INT
Rows: 5


*/