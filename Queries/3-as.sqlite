/*

*/
/****************************************************************************************************************************************************************/

/*
Knowing how [SELECT] works, suppose we have the code below:

SELECT name AS 'Titles' FROM movies;

Can you guess what [AS] does?

[AS] is a keyword in SQL that allows you to rename a column or table using an alias.
The new name can be anything you want as long as you put it inside of single quotes.
Here we renamed the [name] column as [Titles],

Some important things to note:
    - Although it's not always necessary, it is considered best practice to surround your aliases with single quotes.
        - Note that this practice is specific to SQLite, the RDBMS used in this exercise.
        When you work with other RDBMSs, notable PostgreSQL, NO QUOTES OR DOUBLE QUOTES MAY BE REQUIRED IN PLACE OF SINGLE QUOTES/
    - When using [AS], the columns are not being renamed in the table.
        The aliases only appear in the result.
*/
/****************************************************************************************************************************************************************/

/*
Instructions
Checkpoint 1 Passed
1.
To showcase what the AS keyword does, select the name column and rename it with an alias of your choosing.

Place the alias inside single quotes, like so:

SELECT name AS '______'
FROM movies;

Copy to Clipboard

Note in the result, that the name of the column is now your alias.

Suppose you want to rename the name column as Binge, then the query would look like:

SELECT name AS 'Binge' 
FROM movies;

Copy to Clipboard

If this is your query, then the name of the column in the result would be Binge.

The underscores are only there for directional purposes.

Checkpoint 2 Passed
2.
Edit the query so that instead of selecting and renaming the name column, select the imdb_rating column and rename it as IMDb.

The AS syntax is as follows:

SELECT column AS 'Nickname' 
FROM table_name;

Copy to Clipboard

To rename the imdb_rating to IMDb:

SELECT imdb_rating AS 'IMDb' 
FROM movies;

Copy to Clipboard

Put single quotes around the alias.
SQL commands end with a ;.
There should only be one column in the result and its name should now be IMDb.
*/
/****************************************************************************************************************************************************************/

/*
SELECT name AS 'Title' FROM movies;
SELECT imdb_rating AS 'IMDb' FROM movies;
*/
/****************************************************************************************************************************************************************/

/*
Query Results
IMDb
7.9
7.3
8.1
9.0
6.6
8.7
7.9
8.5
7.3
7.3
7.3
6.0
7.7
7.3
6.3
7.4
7.4
6.2
8.1
7.1
7.9
6.2
7.1
6.7
7.1
8.4
6.9
8.1
7.8
8.8
7.2
8.8
7.2
7.1
8.0
7.8
7.8
8.0
7.6
6.4
5.8
6.3
7.0
6.7
7.2
7.3
6.8
8.1
6.5
7.8
7.2
8.4
7.6
8.2
7.5
8.6
6.0
6.7
8.3
8.1
7.4
6.3
7.8
7.4
7.9
6.0
6.5
7.7
7.2
7.9
7.2
6.7
6.6
6.4
7.2
7.8
6.6
7.9
4.4
6.9
7.0
8.0
5.3
7.0
7.6
6.5
6.2
8.5
7.0
6.7
8.0
6.6
7.8
6.6
6.5
7.0
6.9
7.0
6.6
7.2
6.4
7.5
7.1
5.9
6.3
7.6
5.9
7.2
5.7
6.1
7.4
7.6
4.9
5.5
6.6
6.2
8.4
5.7
5.4
4.9
6.6
7.5
5.8
6.7
6.2
6.2
7.1
6.2
5.4
7.7
6.9
6.7
5.6
6.8
6.2
6.5
5.2
7.1
5.7
5.8
5.2
6.9
4.6
6.2
5.6
5.6
7.7
8.8
4.9
4.6
5.6
4.9
8.0
7.3
7.0
7.1
8.2
6.0
5.2
6.5
7.7
6.4
6.8
6.9
6.7
7.4
7.1
6.9
7.2
6.8
4.2
6.9
6.7
8.0
7.3
5.5
5.4
7.6
7.1
5.5
7.8
6.4
7.3
6.4
7.5
7.1
6.6
8.0
5.8
6.4
8.5
8.1
8.2
8.1
7.2
7.7
7.7
6.7
8.6
7.7
8.7
8.5
8.0
6.4
7.4
7.6
6.2
8.0
6.4
7.7
8.2
8.1
5.9
8.2
7.3
6.7
8.0
6.4
8.6
6.1
8.1
8.4
8.0
Database Schema
movies
name	type
id	INTEGER
name	TEXT
genre	TEXT
year	INTEGER
imdb_rating	REAL
Rows: 230
*/
/****************************************************************************************************************************************************************/